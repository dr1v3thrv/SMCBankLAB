#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define NAME_LEN 50
#define ACCT_FILE_LEN 14 //ninedigit account num plus 4 characters for ".txt"

typedef struct {
	char firstName[NAME_LEN];
	char lastName[NAME_LEN];
	int accountNum;
	int pin;
	char accountFile[ACCT_FILE_LEN];
} Account ;

Account parseAccount(char* line) //Function parseAccount takes char ptr as its arg and returns an Account struct 
{
	const char delimiter[2] = ",";
	Account account; //variable account of the datatype Account 
	char* token = strtok(line, delimiter);// declares token as the first token in the line
	int i = 0;
	while (token != NULL) 
	{
		if (i == 0) 
		{
			strcpy(account.firstName, token);
		}
		if (i == 1) 
		{
			strcpy(account.lastName, token);
		}
		if (i == 2) 
		{
			account.accountNum = atoi(token);
		}
		if (i == 3)
		{
			account.pin = atoi(token);
		}
		if (i == 4) 
		{
			strcpy(account.accountFile, token);
		}

		token = strtok(NULL, delimiter);
		i++;

	};
	return account; //returns account struct 
}

void printAccount(Account account) {
	printf("\n***Account**");
	printf("\nFirst Name: %s", account.firstName);
}

int main() {
	
	
	//variables 
	int accountNumInput;
	int pinInput;
	char line[500];
	Account accountArray[5];

	printf("Please enter your account number");  //Ask user for login info
	//scanf("%d", accountNumInput);

	FILE *fp = fopen("accounts.txt", "r");	//open file
	
	if (fp == NULL) 
	{
		printf("Error. No such file found");
	}
	else
	{
		fgets(line, 500, fp);
		//MAKE LOOP TO CHANGE i
		accountArray[0] = parseAccount(line);
		printAccount(accountArray[0]);
		//parse info in file 
		//account = readAccount(line);
		//search for acct num 
		fclose(fp);
	}
	//Verify for existing account 

	//if exists verify PIN NUM 
	//else account number not found

	
	return 0;
}
 char getAccountFile(accountNum){
	char accountFile;

	FILE *fpAccounts = fopen("accounts.txt", "r");	//open file

	while (fgets(line, 500, fpAccounts) != NULL)//get a line up to 500 chars from file. End when NULL
		{
			accountArray[0] = parseAccount(line);
			 if (accountArray[0].accountNum == accountNum){
			 	accountFile = accountArray[0].accountFile; 
			 	return accountFile;
			 }
	fclose(fpAccounts);
}
